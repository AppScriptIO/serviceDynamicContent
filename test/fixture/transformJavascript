{const a=JSON.parse("{%= JSON.stringify(argument.someConfig1) %}");a.instance=JSON.parse("{%= JSON.stringify(argument.someConfig2) %}");// Initialize the window object 'App' That will contain all utility functions and behaviors for the app //
// class AppClass {
// constructor() {
// }
// }
// Global Object that handles the app and other stuff.
window.App=a||new function(){};const b=window.App;b.module=b.module||{};// polymer behaviors that include functions and properties.
const c={// Setting behavior for the app.
properties:{app:{type:Object,value:function(){return b},notify:!0,reflectToAttribute:!0}}};b.behavior=b.behavior||{};// polymer behaviors that include functions and properties.
b.behavior=c;// System.import('setting.behavior.js').then(exports => window.App.behavior.setting = exports.default);
// Mixins are not supported curretly by Polymer, and babel as a side effect of hacks created.
// window.App.mixin = window.App.mixin || {};
// System.import('setting.mixin.js').then(exports => window.App.mixin.setting = exports.default);
// class MixinBuilder {
// constructor(superclass) {
// this.superclass = superclass;
// }
// with(...mixins) {
// return mixins.reduce((c, mixin) => mixin(c), this.superclass);
// }
// }
// window.App.module.Mixin = (superclass) => new MixinBuilder(superclass);
}