{
  const AppFrontEnd = JSON.parse('"someConfig1"')

  AppFrontEnd.instance = JSON.parse('"someConfig2"')

  // Initialize the window object 'App' That will contain all utility functions and behaviors for the app //
  // class AppClass {
  // constructor() {
  // }
  // }

  function AppClass() {}

  // Global Object that handles the app and other stuff.
  window.App = AppFrontEnd || new AppClass()

  const App = window.App

  App.module = App.module || {} // polymer behaviors that include functions and properties.

  const behavior = {
    // Setting behavior for the app.
    properties: {
      app: {
        type: Object,
        value: function() {
          return App
        },
        notify: true,
        reflectToAttribute: true,
      },
    },
  }

  App.behavior = App.behavior || {} // polymer behaviors that include functions and properties.

  App.behavior = behavior
  // System.import('setting.behavior.js').then(exports => window.App.behavior.setting = exports.default);
  // Mixins are not supported curretly by Polymer, and babel as a side effect of hacks created.
  // window.App.mixin = window.App.mixin || {};
  // System.import('setting.mixin.js').then(exports => window.App.mixin.setting = exports.default);

  // class MixinBuilder {
  // constructor(superclass) {
  // this.superclass = superclass;
  // }

  // with(...mixins) {
  // return mixins.reduce((c, mixin) => mixin(c), this.superclass);
  // }
  // }
  // window.App.module.Mixin = (superclass) => new MixinBuilder(superclass);
}
